import{_ as i}from"./chunks/device_token_auth_display_demo.DGHCCXqo.js";import{_ as a,c as n,o as e,ag as t}from"./chunks/framework.BgId8OS5.js";const E=JSON.parse('{"title":"Microsoft Authentication Model","description":"","frontmatter":{},"headers":[],"relativePath":"enUS/projbobcat/authenticators/microsoft.md","filePath":"enUS/projbobcat/authenticators/microsoft.md","lastUpdated":1750569799000}'),l={name:"enUS/projbobcat/authenticators/microsoft.md"};function h(r,s,p,k,o,c){return e(),n("div",null,s[0]||(s[0]=[t(`<h1 id="microsoft-authentication-model" tabindex="-1">Microsoft Authentication Model <a class="header-anchor" href="#microsoft-authentication-model" aria-label="Permalink to &quot;Microsoft Authentication Model&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#microsoft-authentication-model">Microsoft Authentication Model</a><ul><li><a href="#preparation">Preparation</a><ul><li><a href="#configure-cached-credential-providing-method">Configure cached credential providing method</a></li><li><a href="#configure-first-login-device-flow-verification-code-display-method">Configure first login device flow verification code display method</a></li></ul></li><li><a href="#initialize-validator">Initialize validator</a><ul><li><a href="#initial-verification">Initial verification</a></li><li><a href="#not-initial-verification">Not initial verification</a></li></ul></li><li><a href="#get-authentication-results-first-authentication">Get authentication results (first authentication)</a></li><li><a href="#get-authentication-results-not-initial-authentication">Get Authentication results (not initial authentication)</a></li><li><a href="#interpret-authentication-results">Interpret authentication results</a><ul><li><a href="#failed-authentication-result">Failed Authentication Result</a></li><li><a href="#successful-authentication-result">Successful authentication result</a></li></ul></li></ul></li></ul></nav><p>This authentication model implements the new Azure-based verification process and is applicable to all MineCraft versions currently under maintenance.</p><h2 id="preparation" tabindex="-1">Preparation <a class="header-anchor" href="#preparation" aria-label="Permalink to &quot;Preparation&quot;">​</a></h2><p>Because the new version of the authentication process uses Azure-based authentication. Therefore, before you begin, make sure you have completed <a href="/enUS/projbobcat/createNewAzureApp.html">Configuration of Azure Apps</a></p><p>After completing the Azure application registration, please make sure to complete <a href="/enUS/projbobcat/installationAndConfig.html#ConfiguringMicrosoftLoginAuthenticator">Microsoft Authenticator Initialization</a> at the program entry point.</p><h3 id="configure-cached-credential-providing-method" tabindex="-1">Configure cached credential providing method <a class="header-anchor" href="#configure-cached-credential-providing-method" aria-label="Permalink to &quot;Configure cached credential providing method&quot;">​</a></h3><p>Due to the particularity of this verification model, developers need to save the <strong>refresh token</strong> and <strong>expiration time</strong> returned by the first verification to help the validator complete the verification. The validator will call this method for the first time during verification to query the validity of the local token cache. If the local token is still valid, the verification result will be returned directly. If the locally cached token has expired, the developer needs to manually request a new token and return the refreshed token.</p><p>Here is a sample implementation code of this method:</p><div class="language-c# vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark has-focused-lines vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GraphAuthResultModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">?)&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CacheTokenProviderAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IsNullOrEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(XBLToken)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IsNullOrEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(XBLRefreshToken)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Calculate expire date</span></span>
<span class="line has-focus"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> expireDate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LastRefreshedTime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ExpiresIn); </span></span>
<span class="line"></span>
<span class="line has-focus"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // If the local cache token is still valid, the current token is returned directly.</span></span>
<span class="line has-focus"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Otherwise, request a new token using the refresh token</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (expireDate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DateTime.Now)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line has-focus"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GraphAuthResultModel</span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        { </span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ExpiresIn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)(expireDate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DateTime.Now).TotalSeconds, </span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            AccessToken </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> XBLToken, </span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            RefreshToken </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> XBLRefreshToken </span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }; </span></span>
<span class="line"></span>
<span class="line has-focus"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result); </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line has-focus"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Request a new login token</span></span>
<span class="line has-focus"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> refreshReqDic</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">KeyValuePair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt; </span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { </span></span>
<span class="line has-focus"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;client_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, MicrosoftAuthenticator.ApiSettings.ClientId), </span></span>
<span class="line has-focus"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;refresh_token&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, XBLRefreshToken), </span></span>
<span class="line has-focus"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;grant_type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;refresh_token&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }; </span></span>
<span class="line"></span>
<span class="line has-focus"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> refreshReq</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpRequestMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpMethod.Post, MicrosoftAuthenticator.MSRefreshTokenRequestUrl) </span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { </span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Content </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FormUrlEncodedContent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(refreshReqDic) </span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }; </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> refreshRes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DefaultClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SendAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(refreshReq);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> refreshContent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> refreshRes.Content.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ReadAsStringAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> refreshModel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MicrosoftAuthenticator.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ResolveMSGraphResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(refreshContent,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    GraphAuthResultModelContext.Default.GraphAuthResultModel);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (refreshModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">is</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GraphAuthResultModel</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line has-focus"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (refreshModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">is</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GraphResponseErrorModel</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        { </span></span>
<span class="line has-focus"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Handle failed refresh operations here</span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        } </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, model);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><h3 id="configure-first-login-device-flow-verification-code-display-method" tabindex="-1">Configure first login device flow verification code display method <a class="header-anchor" href="#configure-first-login-device-flow-verification-code-display-method" aria-label="Permalink to &quot;Configure first login device flow verification code display method&quot;">​</a></h3><p>Because we use device flow verification to verify the player&#39;s Microsoft account. Therefore, we need an additional method to present the one-time key and verification address required for device flow verification to the user.</p><p>Here is an example of this method:</p><div class="language-c# vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DeviceTokenNotifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DeviceIdResponseModel</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> deviceIdResponseModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Display the obtained callback data to the front end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DeviceCodeResponse </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> deviceIdResponseModel;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>DeviceIdResponseModel</strong> contains all the information the user needs to complete verification:</p><table tabindex="0"><thead><tr><th style="text-align:center;">Name</th><th style="text-align:center;">Function</th></tr></thead><tbody><tr><td style="text-align:center;">UserCode</td><td style="text-align:center;">The secret key required for user authentication</td></tr><tr><td style="text-align:center;">VerificationUri</td><td style="text-align:center;">Verification address, users need to visit this URL to complete subsequent verification steps</td></tr><tr><td style="text-align:center;">ExpiresIn</td><td style="text-align:center;">Validation code expiration time (seconds)</td></tr></tbody></table><p>Here you can see an example of the interface:</p><p><img src="`+i+`" alt="device_token_demo"></p><p>In this interface, you need to include at least the following content:</p><ul><li>The secret key required to log in</li><li>Specific verification address</li><li>A short operation prompt to help users complete the verification operation</li></ul><h2 id="initialize-validator" tabindex="-1">Initialize validator <a class="header-anchor" href="#initialize-validator" aria-label="Permalink to &quot;Initialize validator&quot;">​</a></h2><h3 id="initial-verification" tabindex="-1">Initial verification <a class="header-anchor" href="#initial-verification" aria-label="Permalink to &quot;Initial verification&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Please make sure you are ready before performing the following process <strong>Configuring the first login device flow verification code display method</strong> to ensure that users can obtain the correct initial login information!</p></div><p>Initialize the validator:</p><div class="language-c# vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> microsoftAuthenticator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MicrosoftAuthenticator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LauncherAccountParser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> launcherAccountParser</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>In the above code block, please replace these parameters according to your actual situation:</p><table tabindex="0"><thead><tr><th style="text-align:center;">Project</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">launcherAccountParser</td><td style="text-align:center;">For initialization of the launcher account parser, see here</td></tr></tbody></table><h3 id="not-initial-verification" tabindex="-1">Not initial verification <a class="header-anchor" href="#not-initial-verification" aria-label="Permalink to &quot;Not initial verification&quot;">​</a></h3><p>Non-initial verification means using the Token cache obtained in the first verification for secondary verification. It mainly uses CacheTokenProviderAsync to verify whether the local credentials are still valid. If the locally cached Token has expired, it will be refreshed in this method.</p><p>Initialize the validator:</p><div class="language-c# vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> microsoftAuthenticator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MicrosoftAuthenticator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    CacheTokenProvider </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CacheTokenProviderAsync,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Email </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;[EMAIL]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LauncherAccountParser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> launcherAccountParser</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>In the above code block, please replace these parameters according to your actual situation:</p><table tabindex="0"><thead><tr><th style="text-align:center;">Project</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">launcherAccountParser</td><td style="text-align:center;">For initialization of the launcher account parser, see here</td></tr><tr><td style="text-align:center;">[EMAIL]</td><td style="text-align:center;">Email address to verify account</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>For the initialization of <strong>launcherAccountParser</strong> (game profile parser), please refer to the <a href="/enUS/projbobcat/additionalParsers/gameProfileParser.html">Game Profile Parser</a> page</p></div><h2 id="get-authentication-results-first-authentication" tabindex="-1">Get authentication results (first authentication) <a class="header-anchor" href="#get-authentication-results-first-authentication" aria-label="Permalink to &quot;Get authentication results (first authentication)&quot;">​</a></h2><p>After you complete the initialization of the authentication model, you only need to call the Microsoft Authenticator&#39;s authentication method for initial account authentication.</p><p>Here is a sample authentication code:</p><div class="language-c# vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark has-focused-lines vp-code" tabindex="0"><code><span class="line"></span>
<span class="line has-focus"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get authentication results</span></span>
<span class="line has-focus"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// DeviceTokenNotifier: This is the information display method mentioned above.</span></span>
<span class="line has-focus"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> authResult</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msAuth.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetMSAuthResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DeviceTokenNotifier); </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (authResult </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line has-focus"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Handling failed authentication</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Parse user fields from Jwt Token</span></span>
<span class="line has-focus"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> claims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JwtTokenHelper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetTokenInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(authResult.IdToken); </span></span>
<span class="line has-focus"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> email</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> claims.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TryGetValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">out</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> outEmail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> outEmail </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IsNullOrEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(email))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line has-focus"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Unable to resolve user&#39;s email address from Jwt credentials, treated as authentication failure</span></span>
<span class="line has-focus"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // This is most likely caused by Azure application or Scope configuration failure.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Save necessary user information to local disk in preparation for next authentication</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> msInfoModel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MSAccountInfoModel</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    XBLToken </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> authResult.AccessToken, </span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    XBLRefreshToken </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> authResult.RefreshToken, </span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ExpiresIn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> authResult.ExpiresIn, </span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Email </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> email </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="get-authentication-results-not-initial-authentication" tabindex="-1">Get Authentication results (not initial authentication) <a class="header-anchor" href="#get-authentication-results-not-initial-authentication" aria-label="Permalink to &quot;Get Authentication results (not initial authentication)&quot;">​</a></h2><p>After you complete the initialization of the authentication model, you only need to call the authentication method of Microsoft Authenticator to complete the account authentication.</p><p>In an asynchronous context, use <strong>AuthTaskAsync</strong> to accomplish authentication:</p><div class="language-c# vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> authResult</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> microsoftAuthenticator.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AuthTaskAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>In a sync context, use <strong>Auth</strong> to finish authentication:</p><div class="language-c# vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> authResult</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> microsoftAuthenticator.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="interpret-authentication-results" tabindex="-1">Interpret authentication results <a class="header-anchor" href="#interpret-authentication-results" aria-label="Permalink to &quot;Interpret authentication results&quot;">​</a></h2><p>After the authentication method is completed, the authentication model will return the authentication result, which is of the parent type <a href="https://github.com/Corona-Studio/ProjBobcat/blob/master/ProjBobcat/ProjBobcat/Class/Model/Auth/AuthResultBase.cs" target="_blank" rel="noreferrer">AuthResultBase</a> object. All authentication results contain an enumeration value <strong>AuthStatus</strong>, which directly indicates the success or failure of the authentication result. Below you can see an interpretation of the authentication results:</p><h3 id="failed-authentication-result" tabindex="-1">Failed Authentication Result <a class="header-anchor" href="#failed-authentication-result" aria-label="Permalink to &quot;Failed Authentication Result&quot;">​</a></h3><p>By judging whether <strong>Error</strong> is empty, you can easily judge whether the authentication results returned by the authentication model are valid. The <strong>Error</strong> object will contain the following fields to tell you some details:</p><table tabindex="0"><thead><tr><th style="text-align:center;">Field</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">authResult.Error.Cause</td><td style="text-align:center;">The specific cause of the problem</td></tr><tr><td style="text-align:center;">authResult.Error.Error</td><td style="text-align:center;">error name</td></tr><tr><td style="text-align:center;">authResult.Error.ErrorMessage</td><td style="text-align:center;">Details of the error, possibly including a solution</td></tr></tbody></table><h3 id="successful-authentication-result" tabindex="-1">Successful authentication result <a class="header-anchor" href="#successful-authentication-result" aria-label="Permalink to &quot;Successful authentication result&quot;">​</a></h3><p>If the <strong>Error</strong> field in the authentication result is empty, it means that the authentication is valid. A successful authentication result will contain the following information:</p><table tabindex="0"><thead><tr><th style="text-align:center;">Field</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">authResult.Id</td><td style="text-align:center;">A unique identifier for the username. ProjBobcat uses a specific generation method to generate this identifier.</td></tr><tr><td style="text-align:center;">authResult.AccessToken</td><td style="text-align:center;">Authorization credentials for the user account</td></tr><tr><td style="text-align:center;">authResult.Profiles</td><td style="text-align:center;">List of roles available to the user, which may contain multiple available roles</td></tr><tr><td style="text-align:center;">authResult.SelectedProfile</td><td style="text-align:center;">The role currently selected by the user. This field may be empty. If it is empty, the user needs to be prompted for manual selection.</td></tr><tr><td style="text-align:center;">authResult.User</td><td style="text-align:center;">Summary of user account information, including some basic account information</td></tr><tr><td style="text-align:center;">authResult.LocalId</td><td style="text-align:center;">Local ID, usually a randomly generated UUID</td></tr><tr><td style="text-align:center;">authResult.RemoteId</td><td style="text-align:center;">The remote ID returned by the authentication server, usually a unique identifier for the user</td></tr><tr><td style="text-align:center;">authResult.XBoxUid</td><td style="text-align:center;">XBox Live UID</td></tr><tr><td style="text-align:center;">authResult.Email</td><td style="text-align:center;">Verify email address used</td></tr><tr><td style="text-align:center;">authResult.CurrentAuthTime</td><td style="text-align:center;">The current verification time, <strong>Developers need to save this field to help confirm the validity of the local cache token</strong></td></tr><tr><td style="text-align:center;">authResult.ExpiresIn</td><td style="text-align:center;">Token expiration time (unit: seconds), <strong>Developers need to save this field to help confirm the validity of the local cache token</strong></td></tr><tr><td style="text-align:center;">authResult.RefreshToken</td><td style="text-align:center;">Refresh token, <strong>Developers need to save this field to help refresh expired tokens</strong></td></tr><tr><td style="text-align:center;">authResult.Skin</td><td style="text-align:center;">Skin URL for user account</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Please use corresponding restrictions or encryption operations to safely store confidential data related to user tokens. The leakage of this data may cause losses.</p></div>`,53)]))}const g=a(l,[["render",h]]);export{E as __pageData,g as default};
