import{_ as e,c as t,o as r,a4 as o}from"./chunks/framework.DaZwPasY.js";const _=JSON.parse('{"title":"Resource information resolver","description":"","frontmatter":{},"headers":[],"relativePath":"enUS/projbobcat/resourceCompleter/resourceInfoResolver/index.md","filePath":"enUS/projbobcat/resourceCompleter/resourceInfoResolver/index.md"}'),s={name:"enUS/projbobcat/resourceCompleter/resourceInfoResolver/index.md"},n=o('<h1 id="resource-information-resolver" tabindex="-1">Resource information resolver <a class="header-anchor" href="#resource-information-resolver" aria-label="Permalink to &quot;Resource information resolver&quot;">â€‹</a></h1><p>In ProjBobcat, we use <strong>ResourceInfoResolver</strong> (ResourceInfoResolver) to help the resource completer identify missing files in MineCraft.</p><p>The following table shows the resource resolvers currently supported by ProjBobcat:</p><table><thead><tr><th style="text-align:center;">Class name</th><th style="text-align:center;">Introduction</th></tr></thead><tbody><tr><td style="text-align:center;">AssetInfoResolver</td><td style="text-align:center;">Used to parse the assets required by the game (audio, language, fonts, textures, etc.)</td></tr><tr><td style="text-align:center;">GameLoggingInfoResolver</td><td style="text-align:center;">Used to parse the log4j log formatting component officially provided by MineCraft</td></tr><tr><td style="text-align:center;">LibraryInfoResolver</td><td style="text-align:center;">Used to parse library files necessary for game startup</td></tr><tr><td style="text-align:center;">VersionInfoResolver</td><td style="text-align:center;">Used to parse JAR files provided in game JSON</td></tr></tbody></table>',4),a=[n];function l(i,c,d,f,p,u){return r(),t("div",null,a)}const g=e(s,[["render",l]]);export{_ as __pageData,g as default};
